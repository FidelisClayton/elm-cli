module <%= moduleName %> exposing (..)

import Html exposing (Html, div, text, program)
<% imports.map(module => { -%>
import <%= module.name %><%= module.exposing.length > 0 ? " exposing (" + module.exposing.join(", ") + ")" : "" %>
<% }) -%>


type alias Model =
    String


init : ( Model, Cmd Msg )
init =
    ( "<%= moduleName %>", Cmd.none )


type Msg
    = NoOp


view : Model -> Html Msg
view model =
    div []
        [ text model ]


update : Msg -> Model -> ( Model, Cmd Msg )
update msg model =
    case msg of
        NoOp ->
            ( model, Cmd.none )


subscriptions : Model -> Sub Msg
subscriptions model =
    Sub.none


main : Program Never Model Msg
main =
    program
        { init = init
        , view = view
        , update = update
        , subscriptions = subscriptions
        }
